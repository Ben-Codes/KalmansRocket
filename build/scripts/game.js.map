{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/objects/Earth.js",
    "src/objects/core/Camera.js",
    "src/objects/core/RenderUtils.js",
    "src/objects/math/RectangleD.js",
    "src/objects/math/Vector2.js",
    "src/objects/spaceCraft/SpaceCraftBase.js",
    "src/states/MainState.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import MainState from 'states/MainState';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\t\tsuper(1200, 600, Phaser.AUTO, 'content', null);\n\t\tthis.state.add('MainState', MainState, false);\n\t\tthis.state.start('MainState');\n\t}\n\n}\n\nnew Game();\n",
    "import vector2 from 'objects/math/Vector2';\nimport RenderUtils from 'objects/core/RenderUtils';\n\nclass Earth {\n\n\tconstructor(game) {\n\t\tthis._game = game;\n\t\tthis.position = new vector2(0,0);\n\n\t\tthis._earthGraphics = game.add.graphics(0, 0);\n\t\tthis._renderUtils = new RenderUtils(this._game);\n\n\t\tthis.isDebugged = true;\n\t}\n\n\tmass() {\n\t\treturn 5.97219e24;\n\t}\n\n\tsurfaceRadius() {\n\t\treturn 6.371e6;\n\t}\n\n\tatmosphereHeight() {\n\t\treturn 1.5e5;\n\t}\n\n\trotationRate() {\n\t\treturn -7.2722052166e-5;\n\t}\n\n\t// https://www.grc.nasa.gov/www/k-12/rocket/atmos.html\n\tgetAtmosphericDensity(altitude) {\n\t\tif (altitude > atmosphereHeight()) return 0;\n\n\t\tlet tempurature = .0;\n\t\tlet pressure = .0;\n\n\t\tif (altitude > 25098.756) {\n\n\t\t\ttempurature = -205.05 + 0.0053805776 * altitude;\n\t\t\tpressure = 51.97 * Math.Pow((tempurature + 459.7) / 389.98, -11.388);\n\n\t\t} else if (altitude > 11019.13) {\n\n\t\t\ttempurature = -70;\n\t\t\tpressure = 473.1 * Math.Exp(1.73 - 0.00015748032 * altitude);\n\n\t\t} else {\n\n\t\t\ttempurature = 59 - 0.0116797904 * altitude;\n\t\t\tpressure = 2116 * Math.Pow((tempurature + 459.7) / 518.6, 5.256);\n\n\t\t}\n\n\t\tlet density = pressure / (1718 * (tempurature + 459.7));\n\n\t\treturn density * 515.379;\n\t}\n\n\t//http://www.mhtl.uwaterloo.ca/old/onlinetools/airprop/airprop.html\n\tgetAtmosphericViscosity(altitude) {\n\t\tif (altitude > atmosphereHeight()) return 0;\n\n\t\tif (altitude > 10668) return 0.0000089213;\n\n\t\treturn -5.37e-10 * altitude + 1.458e-5;\n\t}\n\n\trender(cameraBounds){\n\t\t//Get dimensions of ellipse base on window size\n\t\tlet ellipse = this._renderUtils.computeEllipseSize(this.position, cameraBounds, this.surfaceRadius());\n\n\t\t//debugger;\n\t\tthis._earthGraphics.position.x = ellipse.x;\n\t\tthis._earthGraphics.position.y = ellipse.y;\n\t\t//this._earthGraphics.moveTo(ellipse.x, ellipse.y);\n\n\t\tthis._earthGraphics.beginFill(0x009900);\n\t\tthis._earthGraphics.drawEllipse(ellipse.x, ellipse.y, ellipse.width, ellipse.height);\n\t\t\n\t\tthis._earthGraphics.endFill();\n\n\t}\n\n\n}\n\nexport default Earth;",
    "import rectangleD from 'objects/math/RectangleD';\nimport vector2 from 'objects/math/Vector2';\n\nclass Camera {\n\n\tconstructor(game, target, zoom) {\n\n\t\tthis._target = target;\n\t\tthis._zoom = zoom;\n\t\tthis._game = game;\n\t\tthis._position = new vector2(target.position.x, target.position.y);\n\t}\n\n\tsetZoom(zoom) {\n\t\tzoom = this._game.math.clamp(this._zoom + zoom, .05, 1000000000000);\n\t}\n\n\tupdate(deltaTime){\n\t\tlet targetPosition = this._target.position;\n\t\tthis._position.x(targetPosition.x());\n\t\tthis._position.y(targetPosition.y());\n\t}\n\n\tgetBounds() {\n\t\t\n\t\t\n\t\tlet width = this._game.scale.width * this._zoom;\n\t\tlet height = this._game.scale.height * this._zoom;\n\n\n\t\tlet x = this._position.x - width * .5;\n\t\tlet y = this._position.y - height * .5;\n\n\t\treturn new rectangleD(x, y, width, height);\n\t}\n}\n\nexport default Camera;",
    "import rectangleD from 'objects/math/RectangleD';\nimport vector2 from 'objects/math/Vector2';\n\nclass RenderUtils {\n\n\tconstructor(game) {\n\t\tthis._game = game;\n\n\t}\n\n\tcomputeEllipseSize(position, cameraBounds, radius) {\n\n\t\t//debugger;\n\t\tlet screenRadius = (radius / cameraBounds.width) * this._game.scale.width;\n\t\tlet screenPosition = position.clone();\n\t\tscreenPosition.subtract(new vector2(cameraBounds.left, cameraBounds.top));\n\n\t\tlet screenU = screenPosition.x / cameraBounds.width;\n\t\tlet screenV = screenPosition.y / cameraBounds.height;\n\n\t\tlet screenX = screenU * this._game.scale.width;\n\t\tlet screenY = screenV * this._game.scale.height;\n\n\t\treturn new rectangleD(\n\t\t\tscreenX - screenRadius,\n\t\t\tscreenY - screenRadius,\n\t\t\tscreenRadius * 2.0,\n\t\t\tscreenRadius * 2.0\n\t\t);\n\t}\n\n}\n\nexport default RenderUtils;",
    "class rectangleD {\n\n\tconstructor(x, y, width, height) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.left = 0;\n\t\tthis.right = 0;\n\n\t\tthis.top = 0;\n\t\tthis.bottom = 0;\n\n\t\tthis._computeProperties();\n\n\t}\n\n\n\t_computeProperties() {\n\t\tthis.left = this.x;\n\t\tthis.right = this.x + this.width;\n\n\t\tthis.top = this.y;\n\t\tthis.bottom = this.y + this.height;\n\t}\n\n\tcontains(rect) {\n\t\treturn (rect.x > this.left && rect.x < this.right && rect.y > this.top && rect.y < this.bottom);\n\t}\n\n\tintersects(rect) {\n\t\treturn (this.left < rect.right && this.right > rect.left && this.top < rect.bottom && this.bottom > rect.top);\n\t}\n\n\tclone() {\n\t\treturn new rectangleD(this.x, this.y, this.width, this.height)\n\t}\n\n}\n\nexport default rectangleD;",
    "class Vector2 {\n\n\tconstructor(x, y) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\treset() {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\tlength() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\n\tclone() {\n\t\treturn new Vector2(this.x, this.y);\n\t}\n\n\tadd(v) {\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t}\n\n\tsubtract(v) {\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t}\n\n\tmultiply(v) {\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t}\n\n\tdivide(v) {\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t}\n\n\tdot(v) {\n\t\treturn this.x * v.x + this.y * v.y;\n\t}\n\n\tcross(v) {\n\t\treturn this.x * v.y - this.y * v.x;\n\t}\n\n\tnormalize() {\n\n\t\tlet len = length();\n\t\tthis.x /= len;\n\t\tthis.y /= len;\n\t}\n\n}\n\nexport default Vector2;",
    "import vector2 from 'objects/math/Vector2';\n\nclass SpaceCraftBase {\n\n\tconstructor(game, earth) {\n\n\t\tthis._game = game;\n\t\tthis.earth = earth;\n\t\tthis.position = new vector2(0,-earth.surfaceRadius());\n\t\tthis.position.add(earth.position);\n\t\tthis.velocity = new vector2(0,0);\n\n\t}\n\t\n\n}\n\nexport default SpaceCraftBase;",
    "import Earth from 'objects/Earth';\nimport SpaceCraftBase from 'objects/spaceCraft/SpaceCraftBase';\nimport SimCamera from 'objects/core/Camera';\n\nclass MainState extends Phaser.State {\n\n\tpreload() {\n\t\tthis.load.spritesheet('startButton', 'assets/red_button13.png', 190, 49, 1);\n\t}\n\n\tcreate() {\n\t\tthis._isStarted = false;\n\n\n\t\tthis._startButton = this.add.button(this.world.centerX + 450, 550, 'startButton', this.startButtonClicked, this);\n\t\tthis._startButton.anchor.x = 0.5;\n\t\tthis._startButton.anchor.y = 0.5;\n\n\t\tthis._startButton.input.useHandCursor = true;\n\n\t\tlet text = this.add.text(this.world.centerX + 450, 550, \"Launch\", {\n\t\t\tfill: \"#e9eecf\"\n\t\t});\n\t\ttext.anchor.setTo(0.5);\n\n\t\ttext.font = 'Revalia';\n\t\ttext.fontSize = 20;\n\t\ttext.align = 'center';\n\t\tthis._startText = text;\n\n\t\t//////////////////////\n\n\t\tthis._earth = new Earth(this);\n\t\tthis._spacecraft = new SpaceCraftBase(this, this._earth);\n\t\tthis._simCamera = new SimCamera(this, this._spacecraft, 10);\n\n\t}\n\n\tupdate() {\n\n\t\tif (this._isStarted) {\n\t\t\tcomputePhysics();\n\t\t}\n\n\t\tthis.draw();\n\t}\n\n\tcomputePhysics() {\n\t\t//TODO\n\t}\n\n\tdraw() {\n\n\t\tlet cameraBounds = this._simCamera.getBounds();\n\t\tthis._earth.render(cameraBounds);\n\t}\n\n\tstartButtonClicked() {\n\t\tthis._isStarted = false;\n\t\tthis._startText.visible = false;\n\t\tthis._startButton.visible = false;\n\n\t}\n\n}\n\nexport default MainState;"
  ]
}