{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/index.js",
    "src/objects/Earth.js",
    "src/objects/core/Camera.js",
    "src/objects/core/Particle.js",
    "src/objects/core/RenderUtils.js",
    "src/objects/engines/EngineBase.js",
    "src/objects/engines/EngineExhaust.js",
    "src/objects/engines/Merlin1D.js",
    "src/objects/engines/Merlin1DVac.js",
    "src/objects/math/RectangleD.js",
    "src/objects/math/Vector2.js",
    "src/objects/spaceCraft/BasePayload.js",
    "src/objects/spaceCraft/Fairing.js",
    "src/objects/spaceCraft/Falcon9S1.js",
    "src/objects/spaceCraft/Falcon9S2.js",
    "src/objects/spaceCraft/SpaceCraftBase.js",
    "src/states/MainState.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "import MainState from 'states/MainState';\n\nclass Game extends Phaser.Game {\n\n\tconstructor() {\n\t\tsuper(1200, 600, Phaser.AUTO, 'content', null);\n\t\tthis.state.add('MainState', MainState, false);\n\t\tthis.state.start('MainState');\n\t\t\n\t\tthis.scrollDelta = 0;\n\t}\n}\n\nnew Game();",
    "import vector2 from 'objects/math/Vector2';\nimport RenderUtils from 'objects/core/RenderUtils';\n\nclass Earth {\n\n\tconstructor(game) {\n\t\tthis._game = game;\n\t\tthis.position = vector2.zero();\n\t\tthis.velocity = vector2.zero();\n\n\t\tthis._earthGraphics = game.add.graphics(0, 0);\n\t\tthis._renderUtils = new RenderUtils(this._game);\n\n\t\tthis.pitch = 0.0;\n\n\t\t//temp\n\t\tthis.bmd = game.make.bitmapData(1200, 600);\n\t\tthis.bmd.addToWorld();\n\n\t\tthis.isDebugged = true;\n\n\t}\n\n\tmass() {\n\t\treturn 5.97219e24;\n\t}\n\n\tsurfaceRadius() {\n\t\treturn 6.371e6;\n\t}\n\n\tatmosphereHeight() {\n\t\treturn 1.5e5;\n\t}\n\n\trotationRate() {\n\t\treturn -7.2722052166e-5;\n\t}\n\n\trotationPeriod() {\n\t\treturn 86400;\n\t}\n\n\t// https://www.grc.nasa.gov/www/k-12/rocket/atmos.html\n\tgetAtmosphericDensity(altitude) {\n\t\tif (altitude > this.atmosphereHeight()) return 0;\n\n\t\tlet tempurature = .0;\n\t\tlet pressure = .0;\n\n\t\tif (altitude > 25098.756) {\n\n\t\t\ttempurature = -205.05 + 0.0053805776 * altitude;\n\t\t\tpressure = 51.97 * Math.pow((tempurature + 459.7) / 389.98, -11.388);\n\n\t\t} else if (altitude > 11019.13) {\n\n\t\t\ttempurature = -70;\n\t\t\tpressure = 473.1 * Math.exp(1.73 - 0.00015748032 * altitude);\n\n\t\t} else {\n\n\t\t\ttempurature = 59 - 0.0116797904 * altitude;\n\t\t\tpressure = 2116 * Math.pow((tempurature + 459.7) / 518.6, 5.256);\n\n\t\t}\n\n\t\tlet density = pressure / (1718 * (tempurature + 459.7));\n\n\t\treturn density * 515.379;\n\t}\n\n\t//http://www.mhtl.uwaterloo.ca/old/onlinetools/airprop/airprop.html\n\tgetAtmosphericViscosity(altitude) {\n\t\tif (altitude > this.atmosphereHeight()) return 0;\n\n\t\tif (altitude > 10668) return 0.0000089213;\n\n\t\treturn -5.37e-10 * altitude + 1.458e-5;\n\t}\n\n\tgetIspMultiplier(altitude) {\n\n\t\tlet heightRatio = Math.max(altitude / this.atmosphereHeight(), 0);\n\n\t\treturn 1.0 - Math.exp(-21.3921 * heightRatio);\n\t}\n\n\trender(cameraBounds) {\n\n\t\tlet ellipse = this._renderUtils.computeEllipseSize(this.position, cameraBounds, this.surfaceRadius());\n\t\tlet atmoEllipse = this._renderUtils.computeEllipseSize(this.position, cameraBounds, this.surfaceRadius() + this.atmosphereHeight());\n\n\t\t///Render the atmo\n\t\t//////////\n\t\tlet grd = this.bmd.context.createRadialGradient(ellipse.x, ellipse.y, ellipse.height - (ellipse.height * .0000938), ellipse.x, ellipse.y,\n\t\t\tatmoEllipse.height);\n\t\tgrd.addColorStop(0, '#009900');\n\t\tgrd.addColorStop(0.005, '#0182b7');\n\t\tgrd.addColorStop(0.4, '#4db6ff');\n\t\tgrd.addColorStop(1, '#000000');\n\n\t\tthis.bmd.cls();\n\t\tthis.bmd.circle(ellipse.x, ellipse.y, atmoEllipse.height, grd);\n\n\n\t\t//////\n\t\t//Render the surface\n\t\t//Get dimensions of ellipse base on window size\n\n\t\tthis._earthGraphics.clear()\n\t\tthis._earthGraphics.beginFill(0x009900);\n\n\t\t//Use arc when zoomed in since it has it renders the circle with better detail.\n\t\tif (ellipse.width > 600)\n\t\t\tthis._earthGraphics.arc(ellipse.x, ellipse.y, ellipse.width, 0, -Math.PI * 2.0, true, 1000);\n\t\telse\n\t\t\tthis._earthGraphics.drawEllipse(ellipse.x, ellipse.y, ellipse.width, ellipse.height);\n\n\t\tthis._earthGraphics.endFill();\n\n\n\t}\n\n\n}\n\nexport default Earth;",
    "import rectangleD from 'objects/math/RectangleD';\nimport vector2 from 'objects/math/Vector2';\n\nclass Camera {\n\n\tconstructor(game, target, zoom) {\n\n\t\tthis._target = target;\n\t\tthis._zoom = zoom;\n\t\tthis._game = game;\n\t\tthis._position = new vector2(target.position.x, target.position.y);\n\t}\n\n\tsetZoom(zoom) {\n\n\t\tthis._zoom = this._game.math.clamp(zoom, .05, 1000000000000);\n\t}\n\n\tupdate(deltaTime) {\n\t\tlet targetPosition = this._target.position;\n\t\tthis._position.x = targetPosition.x;\n\t\tthis._position.y = targetPosition.y;\n\t}\n\n\tgetBounds() {\n\n\t\tlet width = this._game.scale.width * this._zoom;\n\t\tlet height = this._game.scale.height * this._zoom;\n\n\t\tlet x = this._position.x - width * .5;\n\t\tlet y = this._position.y - height * .5;\n\n\t\treturn new rectangleD(x, y, width, height);\n\t}\n}\n\nexport default Camera;",
    "import vector2 from 'objects/math/Vector2';\n\nclass Particle {\n\n\tconstructor() {\n\t\t\n\t\tthis.isActive = false;\n\t\tthis.position = vector2.zero();\n\t\tthis.velocity = vector2.zero();\n\n\t\tthis.age = 0;\n\t\tthis.maxAge = 0;\n\n\t\tthis.isFlame = false;\n\t}\n\n}\n\nexport default Particle;",
    "import rectangleD from 'objects/math/RectangleD';\nimport vector2 from 'objects/math/Vector2';\n\nclass RenderUtils {\n\n\tconstructor(game) {\n\t\tthis._game = game;\n\t}\n\n\tcomputeEllipseSize(position, cameraBounds, radius) {\n\n\t\tlet screenRadius = (radius / cameraBounds.width) * this._game.scale.width;\n\n\t\tlet screenPosition = position.clone();\n\t\tscreenPosition.subtract(new vector2(cameraBounds.left, cameraBounds.top));\n\n\t\tlet screenU = screenPosition.x / cameraBounds.width;\n\t\tlet screenV = screenPosition.y / cameraBounds.height;\n\n\t\tlet screenX = screenU * this._game.scale.width;\n\t\tlet screenY = screenV * this._game.scale.height;\n\n\t\treturn new rectangleD(\n\t\t\tscreenX,\n\t\t\tscreenY,\n\t\t\tscreenRadius,\n\t\t\tscreenRadius\n\t\t);\n\t}\n\n\tcomputeBoundingBox(position, cameraBounds, width, height) {\n\n\t\tlet screenWidth = (width / cameraBounds.width) * this._game.scale.width;\n\t\tlet screenHeight = (height / cameraBounds.height) * this._game.scale.height;\n\n\t\tlet screenPosition = position.clone();\n\t\tscreenPosition.subtract(new vector2(cameraBounds.left, cameraBounds.top));\n\n\t\tlet screenU = screenPosition.x / cameraBounds.width;\n\t\tlet screenV = screenPosition.y / cameraBounds.height;\n\n\t\tlet screenX = screenU * this._game.scale.width;\n\t\tlet screenY = screenV * this._game.scale.height;\n\n\t\treturn new rectangleD(\n\t\t\tscreenX,\n\t\t\tscreenY,\n\t\t\tscreenWidth,\n\t\t\tscreenHeight\n\t\t);\n\t}\n\n}\n\nexport default RenderUtils;",
    "import vector2 from 'objects/math/Vector2';\nimport EngineExhaust from 'objects/engines/EngineExhaust';\n\nclass EngineBase  {\n\n\tconstructor(parent, offset) {\n\n\t\tthis.parent = parent;\n\t\tthis.offset = offset;\n\t\tthis._offsetLength = offset.length();\n\t\tthis._offsetRotation = offset.angle() - Math.PI / 2.0;\n\n\t\tthis.isActive = false;\n\t\tthis.throttle = 0.0;\n\n\t\tthis.cant = 0.0;\n\n\t\tthis._engineExhaust = new EngineExhaust(this.parent._game.game);\n\t}\n\n\n\tupdate(deltaTime, ispMultiplier) {\n\t\t\n\t\t\n\t\tif(this._engineExhaust == null)\n\t\t\treturn;\n\t\tlet rotation = this.parent.pitch - this._offsetRotation;\n\t\tlet offset = new vector2(Math.cos(rotation), Math.sin(rotation));\n\t\toffset.multiply(this._offsetLength);\n\n\t\tlet throttle = 0;\n\t\tif(this.isActive && this.parent.propellantMass > 0)\n\t\t\tthrottle = this.throttle;\n\n\t\tlet position = this.parent.position.clone();\n\t\tposition.subtract(offset);\n\n\t\tthis._engineExhaust.update(deltaTime, position, this.parent.velocity, this.parent.pitch, throttle, ispMultiplier);\n\t}\n\n\tdraw(cameraBounds){\n\n\t\tthis._engineExhaust.draw(cameraBounds);\n\t}\n\n\tstartup() {\n\t\tthis.isActive = true;\n\t}\n\n\tshutdown(){\n\t\tthis.adjustThrottle(0);\n\t\tthis.isActive = false;\n\t}\n\n\tadjustThrottle(throttle){\n\t\tthis.throttle = throttle;\n\t}\n\n\tadjustCant(angle){\n\t\tthis.cant = angle;\n\t}\n\n\tthrust(ispMultiplier){\n\t\treturn 0.0;\n\t}\n\n\tmassFlowRate(ispMultiplier){\n\t\treturn 0.0;\n\t}\n\n}\n\n\nexport default EngineBase;",
    "import rectangleD from 'objects/math/RectangleD';\nimport vector2 from 'objects/math/Vector2';\nimport particle from 'objects/core/Particle';\nimport RenderUtils from 'objects/core/RenderUtils';\n\nclass EngineExhaust {\n\n\tconstructor(game) {\n\n\t\tthis.particles = [];\n\t\tthis._availableParticles = [];\n\n\t\tthis._graphics = game.add.graphics(0, 0);\n\n\n\t\tfor(let i = 0; i < 500; i++){\n\t\t\tlet p = new particle();\n\t\t\tthis.particles.push(p);\n\t\t\tthis._availableParticles.push(p);\n\t\t}\n\n\t\tthis._particleRate = .5; //100\n\t\tthis._minSpread = 2;\n\t\tthis._maxSpread = .1;\n\t\tthis._maxAge = 10;\n\t\tthis._currentMax = .1;\n\t\tthis._angle = .05;\n\n\t\tthis._renderUtil = new RenderUtils(game);\n\t}\n\n\n\tupdate(deltaTime, enginePosition, shipVelocity, rotation, throttle, ispMultiplier){\n\t\t\n\t\tlet partToGenerate = (throttle * this._particleRate) * deltaTime;\n\t\tlet retrograde = rotation + Math.PI  + this._angle; // \n\n\t\tlet spreadMultiplier = (1.0 - ispMultiplier) * this._minSpread + ispMultiplier * this._maxSpread;\n\n\t\tfor(let i = 0; i < partToGenerate; i++){\n\t\n\t\t\tif(this._availableParticles.length > 0){\n\n\t\t\t\tlet velocityFactor = Math.random() * (300 - 200) + 200;\n\t\t\t\tlet spread = Math.random() - .5;\n\n\t\t\t\tlet velocity = vector2.fromAngle(retrograde + spread * spreadMultiplier); \n\n\t\t\t\tif(this._currentMax < this._maxAge)\n\t\t\t\t\tthis._currentMax += .001;\n\n\n\n\t\t\t\tlet p = this._availableParticles.pop();\n\t\t\t\tp.isActive = true;\n\t\t\t\tp.age = 0;\n\n\t\t\t\tif(Math.random() < .25){\n\t\t\t\t\tp.maxAge = .1;\n\t\t\t\t\tp.isFlame = true;\n\t\t\t\t} else{\n\t\t\t\t\tp.maxAge = Math.random() * .05 + this._currentMax;\n\t\t\t\t\tp.isFlame = false;\n\t\t\t\t}\n\n\t\t\t\t\n\t\t\t\tp.position = enginePosition.clone();\n\t\t\t\t\n\t\t\t\tvelocity.multiply(velocityFactor);\n\t\t\t\tp.velocity = velocity;\n\t\t\t}\n\t\t}\n\n\t\tfor(let p of this.particles){\n\t\t\tif(p.isActive){\n\t\t\t\t\n\t\t\t\tlet velocity = p.velocity.clone();\n\t\t\t\tvelocity.multiply(deltaTime);\n\n\t\t\t\tp.position.add(velocity);\n\t\t\t\tp.age += deltaTime;\n\n\t\t\t\t//if(p.velocity.y < 0)\n\t\t\t\t\t//debugger;\n\n\t\t\t\tif(p.age > p.maxAge){\n\t\t\t\t\tp.isActive = false;\n\t\t\t\t\tthis._availableParticles.push(p);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tdraw(cameraBounds){\n\n\t\tlet particleScale = 4;\n\n\t\t//if(cameraBounds.width < 1000){\n\t\t\t//particleScale = 1.22e-6 * cameraBounds.width * cameraBounds.width - 4.8e-3 * cameraBounds.width + 4.4;\n\t\t//}\n\n\t\tlet halfParticleScale = particleScale * 0.5;\n\n\t\tthis._graphics.clear();\n\n\t\tthis._graphics.beginFill(0x708c98);\n\n\t\tfor(let p of this.particles){\n\t\t\t\n\t\t\tif(p.isActive){\n\t\t\t\t\n\t\t\t\tif(cameraBounds.contains(p.position)){\n\n\t\t\t\t\tif (p.isFlame){\n\t\t\t\t\t\tlet rand = Math.random();\n\t\t\t\t\t\t if (rand < .5){\n\t\t\t\t\t\t\tthis._graphics.beginFill(0xea2300);\n\t\t\t\t\t\t} else if (rand < .7){\n\t\t\t\t\t\t\tthis._graphics.beginFill(0xff8100);\n\t\t\t\t\t\t} else if (rand < .9){\n\t\t\t\t\t\t\tthis._graphics.beginFill(0xf25500);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tthis._graphics.beginFill(0xd80000);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._graphics.beginFill(0x708c98);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet screencord = this._renderUtil.computeBoundingBox(p.position,cameraBounds);\n\t\t\t\t\tthis._graphics.drawRect(screencord.x - halfParticleScale, screencord.y - halfParticleScale, particleScale, particleScale);\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._graphics.endFill();\n\n\t}\n}\n\nexport default EngineExhaust;",
    "import vector2 from 'objects/math/Vector2';\nimport EngineBase from 'objects/engines/EngineBase';\n\nclass Merlin1D extends EngineBase {\n\n\tconstructor(parent, offset) {\n\n\t\tsuper(parent,offset);\n\t}\n\n\tstatic clone(){\n\t\treturn new Merlin1D(this.parent,this.offset);\n\t}\n\n\tthrust(ispMultiplier){\n\t\treturn (845000 + 69000 * ispMultiplier) * this.throttle  * 0.01;\n\t}\n\n\t//ISP = F/m*g0\n\tmassFlowRate(ispMultiplier){\n\t\treturn (305.76 - 5.88 * ispMultiplier) * this.throttle * 0.01;\n\t}\n\n}\n\n\nexport default Merlin1D;",
    "import vector2 from 'objects/math/Vector2';\nimport EngineBase from 'objects/engines/EngineBase';\n\nclass Merlin1DVac extends EngineBase {\n\n\tconstructor(parent, offset) {\n\n\t\tsuper(parent,offset);\n\t}\n\n\tstatic clone(){\n\t\treturn new Merlin1DVac(this.parent,this.offset);\n\t}\n\n\tthrust(ispMultiplier){\n\t\treturn (845000 + 89000 * ispMultiplier) * this.throttle  * 0.01;\n\t}\n\n\t//ISP = F/m*g0\n\tmassFlowRate(ispMultiplier){\n\t\treturn 273.86 * this.throttle * 0.01;\n\t}\n\n}\n\n\nexport default Merlin1DVac;",
    "class rectangleD {\n\n\tconstructor(x, y, width, height) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.left = 0;\n\t\tthis.right = 0;\n\n\t\tthis.top = 0;\n\t\tthis.bottom = 0;\n\n\t\tthis._computeProperties();\n\n\t}\n\n\n\t_computeProperties() {\n\t\tthis.left = this.x;\n\t\tthis.right = this.x + this.width;\n\n\t\tthis.top = this.y;\n\t\tthis.bottom = this.y + this.height;\n\t}\n\n\tcontains(rect) {\n\t\treturn (rect.x > this.left && rect.x < this.right && rect.y > this.top && rect.y < this.bottom);\n\t}\n\n\tintersects(rect) {\n\t\treturn (this.left < rect.right && this.right > rect.left && this.top < rect.bottom && this.bottom > rect.top);\n\t}\n\n\tclone() {\n\t\treturn new rectangleD(this.x, this.y, this.width, this.height)\n\t}\n\n}\n\nexport default rectangleD;",
    "class Vector2 {\n\n\tconstructor(x, y) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\treset() {\n\t\tthis.x = 0;\n\t\tthis.y = 0;\n\t}\n\n\tlength() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t}\n\n\tclone() {\n\t\treturn new Vector2(this.x, this.y);\n\t}\n\n\tadd(v) {\n\n\t\tif (typeof v === 'object') {\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t} else {\n\t\t\tthis.x += v;\n\t\t\tthis.y += v;\n\t\t}\n\t}\n\n\tsubtract(v) {\n\n\t\tif (typeof v === 'object') {\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t} else {\n\t\t\tthis.x -= v;\n\t\t\tthis.y -= v;\n\t\t}\n\t}\n\n\tmultiply(scaler) {\n\t\tthis.x *= scaler;\n\t\tthis.y *= scaler;\n\t}\n\n\tdivide(v) {\n\n\t\tif (typeof v === 'object') {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t} else {\n\t\t\tthis.x /= v;\n\t\t\tthis.y /= v;\n\n\t\t}\n\t}\n\n\tdot(v) {\n\t\treturn this.x * v.x + this.y * v.y;\n\t}\n\n\tcross(v) {\n\t\treturn this.x * v.y - this.y * v.x;\n\t}\n\n\tnormalize() {\n\n\t\tlet len = this.length();\n\t\tthis.x /= len;\n\t\tthis.y /= len;\n\t}\n\n\tlengthSquared() {\n\t\treturn this.x * this.x + this.y * this.y;\n\t}\n\n\tangle() {\n\t\treturn Math.atan2(this.y, this.x);\n\t}\n\n\tstatic zero() {\n\t\treturn new Vector2(0, 0);\n\t}\n\n\tstatic fromAngle(angle) {\n\t\tlet x = Math.cos(angle);\n\t\tlet y = Math.sin(angle);\n\t\treturn new Vector2(x, y);\n\t}\n\n}\n\nexport default Vector2;",
    "import vector2 from 'objects/math/Vector2';\nimport RenderUtils from 'objects/core/RenderUtils';\nimport SpaceCraftBase from 'objects/spaceCraft/SpaceCraftBase';\n\nclass BasePayload extends SpaceCraftBase {\n\n\tconstructor(game, position, gravitationalParent, payloadMass) {\n\n\t\tlet sprite = game.add.sprite(-9999, -9999, 'BasePayload');\n\t\tsprite.anchor.setTo(.5, .5);\n\n\t\t//Width: 4 meters Height 8.52 meters\n\t\tsuper(game, position, sprite, 4, 8.52, new vector2(0, 0), gravitationalParent, payloadMass, 0);\n\n\t\t//TODO: Use enums\n\t\tthis.aeroDynamicProperties = \"ExposedToAirFlow\";\n\n\t\tthis._deployedFairings = true;\n\t}\n\n\taddFairings(leftFairing, rightFairing) {\n\t\tthis._leftFairing = leftFairing;\n\t\tthis._rightFairing = rightFairing;\n\n\t\tthis.addChild(leftFairing);\n\t\tthis.addChild(rightFairing);\n\t\tleftFairing.setParent(this);\n\t\trightFairing.setParent(this);\n\n\t\tthis._deployedFairings = false;\n\t}\n\n\tformDragCoefficient() {\n\t\tlet baseCD = this.getBaseCd(0.4);\n\t\tlet alpha = this.getAlpha();\n\n\t\treturn baseCD * Math.cos(alpha);\n\t}\n\n\tformLiftCoefficient() {\n\t\t//if (!this._deployedFairings) {\n\t\t//\treturn this._leftFairing.formLiftCoefficient() +\n\t\t//\t\tthis._rightFairing.formLiftCoefficient();\n\t\t//}\n\t\t//Fairings are children\n\n\t\treturn 0;\n\t}\n\n\texposedSurfaceArea() {\n\n\t\tif (!this._deployedFairings) {\n\t\t\t//return this._leftFairing.exposedSurfaceArea() +\n\t\t\t//\tthis._rightFairing.exposedSurfaceArea();\n\t\t\t//Fairings are children\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn 1\n\t}\n\n\tfrontalArea() {\n\n\t\tif (!this._deployedFairings) {\n\t\t\t//return this._leftFairing.frontalArea() +\n\t\t\t//\tthis._rightFairing.frontalArea();\n\t\t\t//Fairings are children\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tliftingSurfaceArea() {\n\t\tif (!this._deployedFairings) {\n\t\t\t//return this._leftFairing.liftingSurfaceArea() +\n\t\t\t//\tthis._rightFairing.liftingSurfaceArea();\n\t\t\t//Fairings are children\n\t\t\treturn 0;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tdeployFairing() {\n\t\tthis._deployedFairings = false;\n\n\t\tthis.children.splice(this.children.indexOf(this._leftFairing), 1);\n\t\tthis.children.splice(this.children.indexOf(this._rightFairing), 1);\n\n\t\tthis._leftFairing.stage();\n\t\tthis._rightFairing.stage();\n\t}\n\n\tdryMass() {\n\t\tif (!this._deployedFairings) {\n\t\t\t//return this._leftFairing.dryMass() +\n\t\t\t//\tthis._rightFairing.dryMass();\n\t\t\t//Fairings are children\n\t\t}\n\t\treturn 0;\n\t}\n\n\tname(){\n\t\treturn \"BasePayload\";\n\t}\n\n}\n\nexport default BasePayload;",
    "import vector2 from 'objects/math/Vector2';\nimport RenderUtils from 'objects/core/RenderUtils';\nimport SpaceCraftBase from 'objects/spaceCraft/SpaceCraftBase';\n\nclass Fairing extends SpaceCraftBase {\n\n\tconstructor(game, position, isLeft, gravitationalParent) {\n\n\n\t\tlet offset = new vector2(0, 0);\n\t\tlet sprite;\n\n\t\tif (isLeft) {\n\t\t\tsprite = game.add.sprite(-9999, -9999, 'fairingLeft');\n\t\t\toffset.x = -1.26;\n\t\t\toffset.y = -2.2;\n\n\t\t} else {\n\t\t\tsprite = game.add.sprite(-9999, -9999, 'fairingRight');\n\t\t\toffset.x = 1.26;\n\t\t\toffset.y = -2.2;\n\t\t}\n\n\t\tsprite.anchor.setTo(.5, .5);\n\n\t\t//Width: 2.59 meters Height 13.0 meters\n\t\tsuper(game, position, sprite, 2.59, 13.0, offset, gravitationalParent, 0, 0);\n\n\t\tthis._isLeft = isLeft;\n\t\tthis.aeroDynamicProperties = \"ExposedToAirFlow\";\n\n\t}\n\n\tstagingForce(){\n\t\treturn 1500;\n\t}\n\n\tformDragCoefficient() {\n\t\tlet baseCD = this.getBaseCd(0.4);\n\t\tlet alpha = this.getAlpha();\n\n\t\treturn baseCD * Math.cos(alpha);\n\t}\n\n\tformLiftCoefficient() {\n\t\tlet baseCD = this.getBaseCd(0.6);\n\t\tlet alpha = this.getAlpha();\n\n\t\treturn baseCD * Math.sin(alpha * 2.0);\n\t}\n\n\texposedSurfaceArea() {\n\n\t\treturn 2 * Math.PI * (this.width / 2) * this.height + this.frontalArea();\n\t}\n\n\tfrontalArea() {\n\n\t\treturn Math.PI * Math.pow(this.width / 2, 2);\n\t}\n\n\tliftingSurfaceArea() {\n\t\treturn this.width * this.height;\n\t}\n\n\tdryMass(){\n\t\treturn 875;\n\t}\n\n\tname(){\n\t\treturn \"Fairing\";\n\t}\n\n\n}\n\nexport default Fairing;",
    "import vector2 from 'objects/math/Vector2';\nimport RenderUtils from 'objects/core/RenderUtils';\nimport SpaceCraftBase from 'objects/spaceCraft/SpaceCraftBase';\nimport Merlin1D from 'objects/engines/Merlin1D';\n\nclass Falcon9S1 extends SpaceCraftBase {\n\n\tconstructor(game, position, gravitationalParent, propellantMass = 406698) {\n\n\t\tlet sprite = game.add.sprite(-9999, -9999, 'falcon9S1');\n\t\tsprite.anchor.setTo(.5, .5);\n\n\t\t//Width: 4.11 meters Height 47.812 meters\n\t\tsuper(game, position, sprite, 4.11, 47.812188, new vector2(0, 25.55), gravitationalParent, 0, propellantMass);\n\n\t\tthis.aeroDynamicProperties = \"ExtendsFineness\";\n\n\t\tfor (let i = 0; i < 9; i++) {\n\n\t\t\tlet engineOffsetX = (i - 4.0) / 4.0;\n\t\t\tlet offset = new vector2(engineOffsetX * this.width * 0.3, this.height * 0.45);\n\n\t\t\tthis.engines.push(new Merlin1D(this, offset));\n\t\t}\n\n\t}\n\n\tformDragCoefficient() {\n\n\t\tlet baseCD = this.getBaseCd(0.4);\n\t\tlet alpha = this.getAlpha();\n\n\t\tlet isRetro = false;\n\n\t\tif (alpha > (Math.PI / 2) || alpha < -(Math.PI / 2)) {\n\t\t\t//LandingLegs\n\n\t\t\t//GridFins\n\n\t\t\tbaseCD = this.getBaseCd(0.8);\n\n\t\t\tisRetro = true;\n\t\t}\n\n\t\tlet dragCoefficient = Math.abs(baseCD * Math.cos(alpha));\n\t\tlet dragPreservation = 1.0;\n\n\t\tif (isRetro) {\n\n\t\t\tif (this.throttle > 0 && this.machNumber > 1.5 && this.machNumber < 20) {\n\t\t\t\tlet throttleFactor = throttle / 50;\n\t\t\t\t//TODO: engine bell drag\n\t\t\t\tlet cantFactor = 0.0;\n\t\t\t\tdragPreservation += throttleFactor * cantFactor;\n\t\t\t\tdragCoefficient *= dragPreservation;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.abs(dragCoefficient);\n\t}\n\n\tformLiftCoefficient() {\n\t\tlet baseCD = this.getBaseCd(0.6);\n\t\tlet alpha = this.getAlpha();\n\n\t\treturn baseCD * Math.sin(alpha * 2.0);\n\t}\n\n\texposedSurfaceArea() {\n\n\t\treturn 2 * Math.PI * (this.width / 2) * this.height + this.frontalArea();\n\t}\n\n\tfrontalArea() {\n\t\tlet area = Math.PI * Math.pow(this.width / 2, 2);\n\t\tlet alpha = getAlpha();\n\n\t\treturn Math.abs(area * Math.cos(alpha));\n\t}\n\n\tliftingSurfaceArea() {\n\t\treturn this.width * this.height;\n\t}\n\n\tdryMass() {\n\t\treturn 22200;\n\t}\n\n\ttempLaunch(){\n\t\tfor (let engine of this.engines) {\n\t\t\tengine.startup();\n\t\t\tengine.adjustThrottle(100);\n\t\t};\n\t}\n\n\tname(){\n\t\treturn \"Falcon9S1\";\n\t}\n\n}\n\nexport default Falcon9S1;",
    "import vector2 from 'objects/math/Vector2';\nimport RenderUtils from 'objects/core/RenderUtils';\nimport SpaceCraftBase from 'objects/spaceCraft/SpaceCraftBase';\nimport Merlin1DVac from 'objects/engines/Merlin1DVac';\n\nclass Falcon9S2 extends SpaceCraftBase {\n\n\tconstructor(game, position, gravitationalParent) {\n\n\t\tlet sprite = game.add.sprite(-9999, -9999, 'falcon9S2');\n\t\tsprite.anchor.setTo(.5, .5);\n\n\t\t//Width: 3.706 meters Height 14.0018 meters\n\t\tsuper(game, position, sprite, 3.706, 14.0018, new vector2(0, 11.2), gravitationalParent, 0, 103500);\n\n\t\tthis.aeroDynamicProperties = \"ExtendsFineness\";\n\n\t\tthis.engines.push(new Merlin1DVac(this, new vector2(0, this.height * 0.3)));\n\t}\n\n\tformDragCoefficient() {\n\t\tlet baseCD = this.getBaseCd(0.5);\n\t\tlet alpha = this.getAlpha();\n\n\t\treturn Math.abs(baseCD * Math.cos(alpha));\n\t}\n\n\tformLiftCoefficient() {\n\t\tlet baseCD = this.getBaseCd(0.6);\n\t\tlet alpha = this.getAlpha();\n\n\t\treturn baseCD * Math.sin(alpha * 2.0);\n\t}\n\n\texposedSurfaceArea() {\n\n\t\treturn 2 * Math.PI * (this.width / 2) * this.height + this.frontalArea();\n\t}\n\n\tfrontalArea() {\n\t\treturn Math.PI * Math.pow(this.width / 2, 2);\n\t}\n\n\tliftingSurfaceArea() {\n\t\treturn this.width * this.height;\n\t}\n\n\tdryMass() {\n\t\treturn 4000;\n\t}\n\n\tname(){\n\t\treturn \"Falcon9S2\";\n\t}\n\n}\n\nexport default Falcon9S2;",
    "import vector2 from 'objects/math/Vector2';\nimport RenderUtils from 'objects/core/RenderUtils';\nimport EngineExhaust from 'objects/engines/EngineExhaust';\n\nclass SpaceCraftBase {\n\n\tconstructor(game, position, sprite, width, height, stageOffset, gravitationalParent, payloadMass, propellantMass) {\n\n\n\t\tthis._sprite = sprite;\n\n\t\tthis._game = game;\n\n\t\tthis.position = position;\n\t\tthis.velocity = vector2.zero();\n\n\t\tthis.propellantMass = propellantMass;\n\t\tthis.gravitationaParent = gravitationalParent;\n\t\tthis.heatingRate = 0.0;\n\n\t\tthis.accelerationG = vector2.zero();\n\t\tthis.accelerationD = vector2.zero();\n\t\tthis.accelerationN = vector2.zero();\n\t\tthis.accelerationL = vector2.zero();\n\n\t\tthis.machNumber = 0.0;\n\n\t\tthis.apogee = 0.0;\n\t\tthis.perigee = 0.0;\n\n\t\tthis.roll = 0.0;\n\t\tthis.yaw = 0.0;\n\t\tthis.pitch = -Math.PI * 0.5;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.throttle = 0;\n\n\t\tthis._stageOffset = stageOffset;\n\t\tthis.onGround = true;\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.aeroDynamicProperties = \"None\";\n\t\tthis._groundInterations = 0;\n\n\t\tthis.engines = [];\n\t\tthis.ispMultiplier = 0.0;\n\t\tthis.thrust = 0.0;\n\n\t\tthis._atmoSpeed = 0.0;\n\t\tthis._altitude = 0.0;\n\n\t\t//this.engineExhaust = new EngineExhaust(game.game);\n\n\t\tthis._renderUtils = new RenderUtils(this._game);\n\n\t}\n\n\tsetParent(parent) {\n\t\tthis.parent = parent;\n\t}\n\n\taddChild(child) {\n\t\tthis.children.push(child);\n\t}\n\n\tupdate(deltaTime) {\n\t\t\t\t\t\n\t\tlet altitudeFromCenter = this.getRelativeAltitude();\n\t\tthis.ispMultiplier = this.gravitationaParent.getIspMultiplier(altitudeFromCenter);\n\n\t\tif (this.parent == null) {\n\n\t\t\tthis.updateEngines(deltaTime);\n\n\t\t\tif( this.thrust > 0){\n\n\t\t\t\tlet trustvector = new vector2(Math.cos(this.pitch), Math.sin(this.pitch));\n\n\t\t\t\ttrustvector.multiply(this.thrust);\n\t\t\t\ttrustvector.divide(this.mass());\n\t\t\t\tthis.accelerationN.add(trustvector);\n\t\t\t}\n\t\t\t\n\t\t\tthis.accelerationG.multiply(deltaTime);\n\t\t\tthis.accelerationD.multiply(deltaTime);\n\t\t\tthis.accelerationN.multiply(deltaTime);\n\t\t\tthis.accelerationL.multiply(deltaTime);\n\n\t\t\tthis.velocity.add(this.accelerationG);\n\t\t\tthis.velocity.add(this.accelerationD);\n\t\t\tthis.velocity.add(this.accelerationN);\n\t\t\tthis.velocity.add(this.accelerationL);\n\n\t\t\tlet tempVelocity = this.velocity.clone();\n\t\t\ttempVelocity.multiply(deltaTime);\n\n\t\t\tthis.position.add(tempVelocity);\n\n\t\t\tfor (let spacecraft of this.children) {\n\t\t\t\tspacecraft.updateChildren(this.position, this.velocity);\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateChildren(parentPosition, velocity) {\n\n\t\tlet rotationOffset = new vector2(\n\t\t\tMath.cos(this.pitch), Math.sin(this.pitch)\n\t\t);\n\n\t\tlet newPosition = new vector2(\n\t\t\tthis._stageOffset.x * rotationOffset.y + this._stageOffset.y * rotationOffset.x, -this._stageOffset.x * rotationOffset.x + this._stageOffset.y * rotationOffset.y\n\t\t);\n\n\t\tlet pPosition = parentPosition.clone();\n\n\t\tpPosition.subtract(newPosition);\n\t\tthis.position = pPosition;\n\t\tthis.velocity.x = velocity.x;\n\t\tthis.velocity.y = velocity.y;\n\n\t\tfor (let spacecraft of this.children) {\n\t\t\tspacecraft.updateChildren(this.position, this.velocity);\n\t\t}\n\t}\n\n\tupdateEngines(deltaTime) {\n\n\t\tthis.thrust = 0;\n\n\t\tif (this.engines.length > 0 && this.propellantMass > 0) {\n\n\t\t\tfor (let engine of this.engines) {\n\t\t\t\tif (!engine.isActive) continue;\n\t\t\t\tthis.thrust += engine.thrust(this.ispMultiplier);\n\t\t\t\tthis.propellantMass = Math.max(0, this.propellantMass - engine.massFlowRate(this.ispMultiplier) * deltaTime);\n\n\t\t\t\tengine.update(deltaTime,this.ispMultiplier);\n\t\t\t}\n\t\t}\n\n\t\tfor (let spacecraft of this.children) {\n\t\t\tspacecraft.updateEngines(deltaTime);\n\t\t\tthis.thrust += spacecraft.thrust;\n\t\t}\n\t}\n\n\trender(cameraBounds) {\n\n\t\t//Todo: Check if ship is in viewport, save render time\n\t\tlet boundingBox = this._renderUtils.computeBoundingBox(this.position, cameraBounds, this.width, this.height);\n\n\t\t//RenderBelow\n\n\t\t//RenderShip\n\t\tthis._sprite.position.x = boundingBox.x;\n\t\tthis._sprite.position.y = boundingBox.y;\n\n\t\tthis._sprite.rotation = this.pitch + Math.PI * 0.5;\n\t\tthis._sprite.width = boundingBox.width;\n\t\tthis._sprite.height = boundingBox.height;\n\n\t\tfor (let engine of this.engines) {\n\t\t\tengine.draw(cameraBounds);\n\t\t}\n\t}\n\n\toffsetPitch(offset){\n\t\t\n\t\tthis.pitch += offset;\n\n\t\tfor (let spacecraft of this.children) {\n\t\t\tspacecraft.offsetPitch(offset);\n\t\t}\n\t}\n\n\tresetAccelerations() {\n\t\tthis.accelerationG = vector2.zero();\n\t\tthis.accelerationD = vector2.zero();\n\t\tthis.accelerationN = vector2.zero();\n\t\tthis.accelerationL = vector2.zero();\n\t}\n\n\tgetRelativeAltitude() {\n\n\t\tif (this.gravitationaParent == null)\n\t\t\treturn 0;\n\n\t\tlet diffrence = this.position.clone();\n\t\tdiffrence.subtract(this.gravitationaParent.position);\n\n\t\treturn diffrence.length();\n\t}\n\n\tgetRelativeVelocity() {\n\n\t\tif (this.gravitationaParent == null)\n\t\t\treturn vector2.zero;\n\n\t\tlet diffrence = this.velocity.clone();\n\n\t\treturn diffrence.subtract(this.gravitationaParent.velocity);\n\t}\n\n\tgetTotalHeight() {\n\t\tlet totalHeight = this.height;\n\n\t\tfor (let spacecraft of this.children) {\n\t\t\ttotalHeight += spacecraft._getChildHeight();\n\t\t}\n\n\t\treturn totalHeight;\n\t}\n\n\t_getChildHeight() {\n\n\t\tlet totalHeight = 0;\n\n\t\tif (this.aeroDynamicProperties == \"ExtendsFineness\")\n\t\t\ttotalHeight += this.height;\n\n\t\tfor (let spacecraft of this.children) {\n\t\t\tspacecraft._getChildHeight();\n\t\t}\n\n\t\treturn totalHeight;\n\t}\n\n\tstagingForce() {\n\t\treturn this.mass() * .02;\n\t}\n\n\n\tresolveGrav(earth) {\n\n\t\t///gravity\n\n\t\tif (this.parent != null)\n\t\t\treturn;\n\n\t\tthis.gravitationaParent = earth;\n\n\t\tlet diff_position = earth.position.clone();\n\t\tdiff_position.subtract(this.position);\n\n\t\tlet r2 = diff_position.lengthSquared();\n\t\tlet mass_dist_ratio = earth.mass() / r2;\n\n\t\t//to far\n\t\tif (mass_dist_ratio < 2500) {\n\t\t\treturn\n\t\t}\n\n\t\tlet GravitationConstant = 6.67384e-11;\n\n\t\tdiff_position.normalize();\n\n\t\tmass_dist_ratio = mass_dist_ratio * GravitationConstant;\n\t\tdiff_position.multiply(mass_dist_ratio);\n\t\tthis.accelerationG.add(diff_position);\n\n\t}\n\n\tresolveAtmo(earth) {\n\n\t\tif (this.parent != null)\n\t\t\treturn;\n\n\t\tthis.gravitationaParent = earth;\n\n\t\tlet diff_position = earth.position.clone();\n\t\tdiff_position.subtract(this.position);\n\n\t\tlet heightOffset = 0;\n\t\tif (this.children.length > 0)\n\t\t\theightOffset = this.getTotalHeight() - this.height * .5;\n\t\telse\n\t\t\theightOffset = this.height * .5;\n\n\t\tlet distance = diff_position.length() - heightOffset;\n\n\t\tdiff_position.normalize();\n\t\tlet altitude = distance - earth.surfaceRadius();\n\n\t\tthis._altitude = altitude;\n\n\t\t//In atmo?\n\t\tif (altitude < earth.atmosphereHeight()) {\n\t\t\tlet surfaceNormal = new vector2(-diff_position.y, diff_position.x);\n\n\t\t\t// Distance of circumference at this altitude ( c= 2r * pi )\n\t\t\tlet pathCircumference = 2 * Math.PI * distance;\n\t\t\tlet rotationalSpeed = pathCircumference / earth.rotationPeriod();\n\n\n\t\t\t//TODO: Review and perhaps implement a beter version\n\n\n\t\t\tif (this.onGround && this.thrust == 0) {\n\n\t\t\t\tlet normal = new vector2(-diff_position.x, -diff_position.y);\n\n\t\t\t\tlet earthPosition = earth.position.clone();\n\t\t\t\tlet circumferenceTerm = earth.surfaceRadius() + heightOffset;\n\t\t\t\tlet normalMul = normal.clone();\n\t\t\t\tnormalMul.multiply(circumferenceTerm);\n\n\t\t\t\tearthPosition.add(normalMul);\n\t\t\t\tthis.position = earthPosition;\n\n\t\t\t\tthis.pitch = normal.angle();\n\n\t\t\t\tthis.accelerationN.x = -this.accelerationG.x;\n\t\t\t\tthis.accelerationN.y = -this.accelerationG.y;\n\n\t\t\t} else {\n\t\t\t\tthis.onGround = false;\n\t\t\t}\n\t\t\t\n\n\t\t\tlet atmoDensity = earth.getAtmosphericDensity(altitude);\n\n\t\t\tlet relativeVelocity = earth.velocity.clone();\n\t\t\trelativeVelocity.add(surfaceNormal);\n\t\t\trelativeVelocity.multiply(rotationalSpeed);\n\n\n\t\t\tlet velocityMagnitude = relativeVelocity.lengthSquared();\n\n\t\t\tif (velocityMagnitude > 0) {\n\n\t\t\t\t//M*sec\n\t\t\t\tlet speed = relativeVelocity.length();\n\n\t\t\t\tthis.heatingRate = 1.83e-4 * Math.pow(speed, 3) * Math.sqrt(atmoDensity / (this.width * 0.5));\n\n\t\t\t\tlet formDragCoefficient = this.totalFormDragCoefficient();\n\t\t\t\tlet skinFrictionCoefficient = this.totalSkinFrictionCoefficient();\n\t\t\t\tlet liftCoefficient = this.totalLiftCoefficient();\n\n\t\t\t\tlet formDragTerm = formDragCoefficient * this.totalFormDragArea();\n\t\t\t\tlet skinFrictionTerm = skinFrictionCoefficient * this.totalSkinFrictionArea();\n\n\t\t\t\tlet dragTerm = formDragTerm;\n\t\t\t\tdragTerm += skinFrictionTerm;\n\n\n\t\t\t\tlet liftTerm = liftCoefficient * this.totalLiftArea();\n\n\t\t\t\trelativeVelocity.normalize();\n\n\t\t\t\tlet drag = relativeVelocity.clone();\n\t\t\t\tlet dragVTerm = .5 * atmoDensity * velocityMagnitude * dragTerm;\n\n\t\t\t\tdrag.multiply(dragVTerm);\n\n\t\t\t\tlet lift = relativeVelocity.clone();\n\t\t\t\tlet liftVTerm = .5 * atmoDensity * velocityMagnitude * liftTerm;\n\n\t\t\t\tlift.multiply(liftVTerm);\n\t\t\t\tdrag.divide(this.mass())\n\t\t\t\tlift.divide(this.mass())\n\n\t\t\t\tthis.accelerationD = drag;\n\t\t\t\tlet accelerationLift = lift;\n\n\t\t\t\tlet alpha = this.getAlpha();\n\t\t\t\tlet halfPI = Math.PI / 2;\n\t\t\t\tlet isRetro = alpha > halfPI || alpha < -halfPI;\n\n\n\t\t\t\tthis.accelerationL.x += accelerationLift.y;\n\t\t\t\tthis.accelerationL.y -= accelerationLift.x;\n\n\t\t\t}\n\t\t} else {\n\t\t\tthis.heatingRate = 0;\n\t\t}\n\n\t}\n\n\ttotalFormDragCoefficient() {\n\t\tlet dragCoefficient = 0;\n\n\t\tif (this.aeroDynamicProperties == \"ExposedToAirFlow\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsFineness\") {\n\t\t\tdragCoefficient = this.formDragCoefficient();\n\t\t}\n\n\t\treturn this._getChildDragCoefficient(this.children, dragCoefficient);\n\t}\n\n\t_getChildDragCoefficient(children, dragCoefficient) {\n\n\n\t\tfor (let child of children) {\n\n\t\t\tif (child.aeroDynamicProperties == \"ExposedToAirFlow\") {\n\n\t\t\t\tif (child.formDragCoefficient() > dragCoefficient)\n\t\t\t\t\tdragCoefficient = child.formDragCoefficient();\n\n\t\t\t} else if (child.aeroDynamicProperties = \"ExtendsFineness\") {\n\n\t\t\t\tdragCoefficient *= child.formDragCoefficient();\n\n\t\t\t} else if (child.aeroDynamicProperties = \"ExtendsCrossSection\") {\n\n\t\t\t\tdragCoefficient = (dragCoefficient + child.formDragCoefficient()) / 2;\n\t\t\t}\n\n\t\t\tdragCoefficient = this._getChildDragCoefficient(child.children, dragCoefficient);\n\t\t}\n\n\n\t\treturn dragCoefficient;\n\t}\n\n\n\ttotalFormDragArea() {\n\t\tlet totalFormDragArea = 0;\n\n\t\tif (this.aeroDynamicProperties == \"ExposedToAirFlow\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsFineness\") {\n\t\t\ttotalFormDragArea = this.frontalArea();\n\t\t}\n\n\t\treturn this._getChildDragCoefficient(this.children, totalFormDragArea);\n\t}\n\n\t_getChildFormDragArea(children, totalFormDragArea) {\n\n\n\t\tfor (let child of children) {\n\n\t\t\tif (child.aeroDynamicProperties == \"ExposedToAirFlow\") {\n\n\t\t\t\tif (child.frontalArea() > totalFormDragArea)\n\t\t\t\t\ttotalFormDragArea = child.frontalArea();\n\n\t\t\t} else if (child.aeroDynamicProperties = \"ExtendsCrossSection\") {\n\n\t\t\t\ttotalFormDragArea *= child.frontalArea();\n\n\t\t\t}\n\n\t\t\tdragCoefficient = this._getChildFormDragArea(child.children, totalFormDragArea);\n\t\t}\n\n\n\t\treturn totalFormDragArea;\n\t}\n\n\n\n\tskinFrictionCoefficient() {\n\n\t\tlet velocity = this.getRelativeVelocity();\n\t\t//TODO: Remove\n\t\tif (velocity == null)\n\t\t\treturn 0.0\n\t\tvelocity = velocity.length();\n\t\tlet altitude = this.getRelativeAltitude();\n\t\tlet viscosity = this.gravitationaParent.getAtmosphericViscosity(altitude);\n\t\tlet reynoldsNumber = (velocity * this.height) / viscosity;\n\t\treturn .455 / Math.pow(Math.log10(reynoldsNumber), 2.58);\n\t}\n\n\ttotalSkinFrictionCoefficient() {\n\t\tlet skinFrictionCoefficient = 0;\n\n\t\tif (this.aeroDynamicProperties == \"ExposedToAirFlow\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsFineness\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsCrossSection\") {\n\n\t\t\tskinFrictionCoefficient = this.skinFrictionCoefficient();\n\t\t}\n\n\t\tfor (let spacecraft of this.children) {\n\t\t\tskinFrictionCoefficient += spacecraft.totalSkinFrictionCoefficient();\n\t\t}\n\n\t\treturn skinFrictionCoefficient;\n\t}\n\n\ttotalSkinFrictionArea() {\n\t\tlet totalSkinFrictionArea = 0;\n\n\t\tif (this.aeroDynamicProperties == \"ExposedToAirFlow\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsFineness\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsCrossSection\") {\n\n\t\t\ttotalSkinFrictionArea = this.exposedSurfaceArea();\n\t\t}\n\n\t\tfor (let spacecraft of this.children) {\n\t\t\ttotalSkinFrictionArea += spacecraft.exposedSurfaceArea();\n\t\t}\n\n\t\treturn totalSkinFrictionArea;\n\t}\n\n\n\ttotalLiftCoefficient() {\n\t\tlet liftCoefficient = 0;\n\n\t\tif (this.aeroDynamicProperties == \"ExposedToAirFlow\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsFineness\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsCrossSection\") {\n\n\t\t\tliftCoefficient = this.formLiftCoefficient();\n\t\t}\n\n\t\treturn this._getMaxChildLiftCoefficient(this.children, liftCoefficient);\n\t}\n\n\t_getMaxChildLiftCoefficient(children, totalLiftCoefficient) {\n\n\t\tfor (let child of children) {\n\n\t\t\tif (child.aeroDynamicProperties == \"ExposedToAirFlow\") {\n\n\t\t\t\tif (Math.abs(child.formLiftCoefficient()) > Math.abs(totalLiftCoefficient))\n\t\t\t\t\ttotalLiftCoefficient = child.formLiftCoefficient();\n\n\t\t\t} else if (child.aeroDynamicProperties == \"ExtendsFineness\" ||\n\t\t\t\tchild.aeroDynamicProperties == \"ExtendsCrossSection\") {\n\t\t\t\ttotalLiftCoefficient += child.formLiftCoefficient();\n\t\t\t}\n\n\n\t\t\ttotalLiftCoefficient = this._getMaxChildLiftCoefficient(child.children, totalLiftCoefficient);\n\t\t}\n\n\t\treturn totalLiftCoefficient;\n\t}\n\n\ttotalLiftArea() {\n\t\tlet totalLiftArea = 0;\n\n\t\tif (this.aeroDynamicProperties == \"ExposedToAirFlow\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsFineness\" ||\n\t\t\tthis.aeroDynamicProperties == \"ExtendsCrossSection\") {\n\n\t\t\ttotalLiftArea = this.liftingSurfaceArea();\n\t\t}\n\n\t\treturn this._getChildLiftArea(this.children, totalLiftArea);\n\t}\n\n\t_getChildLiftArea(children, totalLiftArea) {\n\n\t\tfor (let child of children) {\n\n\t\t\tif (child.aeroDynamicProperties == \"ExposedToAirFlow\") {\n\n\t\t\t\tif (child.liftingSurfaceArea() > totalLiftArea)\n\t\t\t\t\ttotalLiftArea = child.liftingSurfaceArea();\n\n\t\t\t} else if (child.aeroDynamicProperties == \"ExtendsFineness\" ||\n\t\t\t\tchild.aeroDynamicProperties == \"ExtendsCrossSection\") {\n\t\t\t\ttotalLiftArea += child.liftingSurfaceArea();\n\t\t\t}\n\n\t\t\ttotalLiftArea = this._getChildLiftArea(child.children, totalLiftArea);\n\t\t}\n\n\t\treturn totalLiftArea;\n\t}\n\n\tgetBaseCd(cd) {\n\t\tif (this.machNumber > 1.0) {\n\t\t\tlet exp = Math.exp(0.3 / this.machNumber);\n\t\t\treturn cd * 1.4 * exp;\n\t\t}\n\n\t\treturn cd;\n\t}\n\n\n\n\tgetAlpha() {\n\n\t\tlet altitude = this.getRelativeAltitude();\n\t\tlet pitch = this.pitch\n\n\t\tif (altitude > this.gravitationaParent.atmosphereHeight()) {\n\n\t\t\treturn this.pitch - this.gravitationaParent.pitch;\n\t\t}\n\n\t\tlet alpha = 0.0;\n\t\tif (altitude > .1) {\n\n\t\t\tlet alpha = this.pitch - this.getRelativeVelocity().angle();\n\n\t\t\twhile (alpha > Math.Pi) {\n\t\t\t\talpha -= Math.Pi * 2;\n\t\t\t}\n\n\t\t\twhile (alpha < -Math.Pi) {\n\t\t\t\talpha += Math.Pi * 2;\n\t\t\t}\n\t\t}\n\n\t\treturn alpha;\n\t}\n\n\tmass() {\n\n\t\tlet childMass = 0;\n\t\tfor (let child of this.children) {\n\t\t\tchildMass += child.mass();\n\t\t}\n\n\t\treturn childMass + this.dryMass() + this.propellantMass;\n\t}\n\n\tsetThrottle(throttle){\n\n\t\tfor (let engine of this.engines) {\n\t\t\tengine.adjustThrottle(throttle);\n\t\t};\n\t}\n\n\tname(){\n\t\treturn \"\";\n\t}\n\n\n}\n\nexport default SpaceCraftBase;",
    "import Earth from 'objects/Earth';\nimport Falcon9S1 from 'objects/spaceCraft/Falcon9S1';\nimport Falcon9S2 from 'objects/spaceCraft/Falcon9S2';\nimport Fairing from 'objects/spaceCraft/Fairing';\nimport BasePayload from 'objects/spaceCraft/BasePayload';\nimport SimCamera from 'objects/core/Camera';\nimport vector2 from 'objects/math/Vector2';\n\nclass MainState extends Phaser.State {\n\n\tpreload() {\n\t\tthis.load.spritesheet('startButton', 'assets/red_button13.png', 190, 49, 1);\n\t\t//TODO: Find a way to move to object classes\n\t\tthis.load.spritesheet('falcon9S1', 'assets/spacecraft/S1.png', 100, 1170, 1);\n\t\tthis.load.spritesheet('falcon9S2', 'assets/spacecraft/S2.png', 90, 340, 1);\n\t\tthis.load.spritesheet('BasePayload', 'assets/spacecraft/default.png', 200, 426, 1);\n\t\tthis.load.spritesheet('fairingLeft', 'assets/spacecraft/fairingLeft.png', 62, 314, 1);\n\t\tthis.load.spritesheet('fairingRight', 'assets/spacecraft/fairingRight.png', 62, 314, 1);\n\n\t}\n\n\tcreate() {\n\n\t\t//Launch Button\n\t\tthis._isStarted = false;\n\t\tthis._buttonGroup = this.game.add.group();\n\n\t\tthis._startButton = this.add.button(this.world.centerX + 450, 550, 'startButton', this.startButtonClicked, this);\n\t\tthis._startButton.anchor.setTo(.5, .5);\n\t\tthis._startButton.input.useHandCursor = true;\n\t\tthis._buttonGroup.add(this._startButton);\n\n\t\tlet text = this.add.text(this.world.centerX + 450, 550, \"Launch\", {\n\t\t\tfill: \"#e9eecf\"\n\t\t});\n\t\ttext.anchor.setTo(0.5);\n\n\t\ttext.font = 'Revalia';\n\t\ttext.fontSize = 20;\n\t\ttext.align = 'center';\n\t\tthis._startText = text;\n\t\tthis._buttonGroup.add(text);\n\n\t\tthis.leftKey = this.game.input.keyboard.addKey(Phaser.Keyboard.LEFT);\n\t\tthis.rightKey = this.game.input.keyboard.addKey(Phaser.Keyboard.RIGHT);\n\n\t\t/////\n\n\t\tthis.now = 0;\n\t\tthis.timeElapsed = 0;\n\t\tthis.hasLaunched = false;\n\n\t\t//////////////////////\n\t\t//Zoom\n\n\t\tthis.game.input.mouse.mouseWheelCallback = this.mouseWheel;\n\t\tthis._zoom = .15;\n\n\t\t///////////////////////\n\n\t\tthis._earth = new Earth(this);\n\t\tthis._spacecraft = this.createSpacecraft();\n\t\tthis._simCamera = new SimCamera(this, this._spacecraft[0], this._zoom);\n\n\t\tthis.computePhysics();\n\n\t}\n\n\tupdate() {\n\n\t\tif (this._isStarted) {\n\t\t\tthis.tempController();\n\t\t}\n\n\t\tthis.computePhysics();\n\n\t\tthis.draw();\n\t}\n\n\tcomputePhysics() {\n\n\t\tfor (let spacecraft of this._spacecraft) {\n\t\t\tspacecraft.resetAccelerations();\n\t\t\tspacecraft.resolveGrav(this._earth);\n\t\t}\n\n\t\tfor (let spacecraft of this._spacecraft) {\n\t\t\tspacecraft.resolveAtmo(this._earth);\n\t\t}\n\n\t\tfor (let spacecraft of this._spacecraft) {\n\t\t\tlet secs = this.game.time.physicsElapsed;\n\t\t\tspacecraft.update(secs);\n\t\t}\n\t}\n\n\tdraw() {\n\n\t\tthis._simCamera.update();\n\n\t\tthis.game.debug.start(20, 20, 'blue');\n\n\t\tlet craftPos = this._spacecraft[2];\n\n\n\t\tthis.game.debug.line('Thrust: ' + craftPos.thrust + ' Speed: ' + Math.floor(craftPos.velocity.length()) + ' Altitude: ' + Math.floor(this._spacecraft[0]._altitude * 3.28) + \" ft\");\n\t\tthis.game.debug.line('Mass: ' + Math.floor(craftPos.mass()) + ' PropellantMass: ' + Math.floor(craftPos.propellantMass));\n\t\tthis.game.debug.line('Pitch: ' + this._spacecraft[0].pitch);\n\t\tif (this.now) {\n\t\t\tthis.timeElapsed = Math.floor(this.game.time.elapsedSecondsSince(this.now));\n\t\t\tthis.game.debug.line('Elapsed Time: ' + this.timeElapsed);\n\t\t}\n\n\n\t\tif (this.leftKey.isDown) {\n\t\t\tthis.game.debug.line('Left Key Down');\n\t\t} else if (this.rightKey.isDown) {\n\t\t\tthis.game.debug.line('Right Key Down');\n\t\t}\n\t\tif (this.leftKey.isDown) {\n\t\t\tthis._spacecraft[0].offsetPitch(-.01);\n\t\t} else if (this.rightKey.isDown) {\n\t\t\tthis._spacecraft[0].offsetPitch(.01);\n\t\t}\n\n\n\t\tlet cameraBounds = this._simCamera.getBounds();\n\t\tthis._earth.render(cameraBounds);\n\t\tfor (let spacecraft of this._spacecraft) {\n\t\t\tspacecraft.render(cameraBounds);\n\t\t}\n\n\t\tthis.game.debug.stop();\n\n\t\t///////////////////////////////////////\n\n\t\tif (this.game.scrollDelta > 0)\n\t\t\tthis._zoom += this._zoom * this.game.scrollDelta;\n\t\telse if (this.game.scrollDelta < 0)\n\t\t\tthis._zoom -= Math.abs(this._zoom * this.game.scrollDelta);\n\n\t\tthis._zoom = this.math.clamp(this._zoom, .05, 1000000000000);\n\n\t\tthis._simCamera.setZoom(this._zoom);\n\t\tthis.game.scrollDelta = 0;\n\n\t\t/////\n\n\t\tthis.game.world.bringToTop(this._buttonGroup);\n\n\t}\n\n\tcreateSpacecraft() {\n\t\tlet position = new vector2(0, -this._earth.surfaceRadius());\n\t\tposition.add(this._earth.position);\n\n\t\tlet payload = new BasePayload(this, position, this._earth, 3136);\n\n\t\tlet zero = new vector2(0, 0);\n\n\t\tlet leftFairing = new Fairing(this, zero.clone(), true, this._earth);\n\t\tlet rightFairing = new Fairing(this, zero.clone(), false, this._earth);\n\n\t\tpayload.addFairings(leftFairing, rightFairing);\n\n\n\t\tlet f9s2 = new Falcon9S2(this, zero.clone(), this._earth);\n\t\tlet f9s1 = new Falcon9S1(this, zero.clone(), this._earth);\n\n\t\tpayload.addChild(f9s2);\n\t\tf9s2.setParent(payload);\n\n\t\tf9s2.addChild(f9s1);\n\t\tf9s1.setParent(f9s2);\n\n\t\treturn [payload, f9s2, f9s1, leftFairing, rightFairing];\n\t}\n\n\tstartButtonClicked() {\n\n\t\tthis._isStarted = true;\n\t\tthis._startText.visible = false;\n\t\tthis._startButton.visible = false;\n\t}\n\n\tmouseWheel(event) {\n\n\t\tif (this.input.mouse.wheelDelta === Phaser.Mouse.WHEEL_UP) {\n\t\t\tthis.scrollDelta -= .5\n\t\t} else {\n\t\t\tthis.scrollDelta += 1.5\n\t\t}\n\t}\n\n\ttempController() {\n\n\t\tthis.turn1 = false;\n\t\tthis.turn2 = false;\n\n\t\tif (this._isStarted) {\n\n\t\t\tthis.now = this.game.time.time;\n\t\t\tthis.hasLaunched = true;\n\t\t\tthis._spacecraft[2].tempLaunch();\n\t\t\tthis._isStarted = false;\n\t\t}\n\n\n\n\n\n\t}\n\n}\n\nexport default MainState;"
  ]
}